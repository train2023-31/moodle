{"version":3,"file":"schedules.min.js","sources":["../src/schedules.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report builder audiences\n *\n * @module      core_reportbuilder/schedules\n * @copyright   2021 Paul Holden <paulh@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport 'core/inplace_editable';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\nimport {getString} from 'core/str';\nimport {add as addToast} from 'core/toast';\nimport * as reportEvents from 'core_reportbuilder/local/events';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\nimport {createScheduleModal} from 'core_reportbuilder/local/repository/modals';\nimport {deleteSchedule, sendSchedule, toggleSchedule} from 'core_reportbuilder/local/repository/schedules';\n\nlet initialized = false;\n\n/**\n * Initialise schedules tab\n *\n * @param {Number} reportId\n */\nexport const init = reportId => {\n    prefetchStrings('core_reportbuilder', [\n        'deleteschedule',\n        'deletescheduleconfirm',\n        'disableschedule',\n        'editscheduledetails',\n        'enableschedule',\n        'newschedule',\n        'schedulecreated',\n        'scheduledeleted',\n        'schedulesent',\n        'scheduleupdated',\n        'sendschedule',\n        'sendscheduleconfirm',\n    ]);\n\n    prefetchStrings('core', [\n        'confirm',\n        'delete',\n    ]);\n\n    if (initialized) {\n        // We already added the event listeners (can be called multiple times by mustache template).\n        return;\n    }\n\n    document.addEventListener('click', event => {\n\n        // Create schedule.\n        const scheduleCreate = event.target.closest(reportSelectors.actions.scheduleCreate);\n        if (scheduleCreate) {\n            event.preventDefault();\n\n            const {scheduleClass} = scheduleCreate.dataset;\n\n            const scheduleModal = createScheduleModal(event.target, getString('newschedule', 'core_reportbuilder'), reportId, 0,\n                scheduleClass);\n            scheduleModal.addEventListener(scheduleModal.events.FORM_SUBMITTED, () => {\n                getString('schedulecreated', 'core_reportbuilder')\n                    .then(addToast)\n                    .then(() => {\n                        const reportElement = document.querySelector(reportSelectors.regions.report);\n                        dispatchEvent(reportEvents.tableReload, {}, reportElement);\n                        return;\n                    })\n                    .catch(Notification.exception);\n            });\n\n            scheduleModal.show();\n        }\n\n        // Toggle schedule.\n        const scheduleToggle = event.target.closest(reportSelectors.actions.scheduleToggle);\n        if (scheduleToggle) {\n            const pendingPromise = new Pending('core_reportbuilder/schedules:toggle');\n            const scheduleStateToggle = +!Number(scheduleToggle.dataset.state);\n\n            toggleSchedule(reportId, scheduleToggle.dataset.id, scheduleStateToggle)\n                .then(() => {\n                    const tableRow = scheduleToggle.closest('tr');\n                    tableRow.classList.toggle('text-muted');\n\n                    scheduleToggle.dataset.state = scheduleStateToggle;\n\n                    const stringKey = scheduleStateToggle ? 'disableschedule' : 'enableschedule';\n                    return getString(stringKey, 'core_reportbuilder');\n                })\n                .then(toggleLabel => {\n                    const labelContainer = scheduleToggle.parentElement.querySelector(`label[for=\"${scheduleToggle.id}\"] > span`);\n                    labelContainer.innerHTML = toggleLabel;\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }\n\n        // Edit schedule.\n        const scheduleEdit = event.target.closest(reportSelectors.actions.scheduleEdit);\n        if (scheduleEdit) {\n            event.preventDefault();\n\n            // Use triggerElement to return focus to the action menu toggle.\n            const triggerElement = scheduleEdit.closest('.dropdown').querySelector('.dropdown-toggle');\n            const scheduleModal = createScheduleModal(triggerElement, getString('editscheduledetails', 'core_reportbuilder'),\n                reportId, scheduleEdit.dataset.scheduleId);\n            scheduleModal.addEventListener(scheduleModal.events.FORM_SUBMITTED, () => {\n                getString('scheduleupdated', 'core_reportbuilder')\n                    .then(addToast)\n                    .then(() => {\n                        const reportElement = scheduleEdit.closest(reportSelectors.regions.report);\n                        dispatchEvent(reportEvents.tableReload, {}, reportElement);\n                        return;\n                    })\n                    .catch(Notification.exception);\n            });\n\n            scheduleModal.show();\n        }\n\n        // Send schedule.\n        const scheduleSend = event.target.closest(reportSelectors.actions.scheduleSend);\n        if (scheduleSend) {\n            event.preventDefault();\n\n            // Use triggerElement to return focus to the action menu toggle.\n            const triggerElement = scheduleSend.closest('.dropdown').querySelector('.dropdown-toggle');\n            Notification.saveCancelPromise(\n                getString('sendschedule', 'core_reportbuilder'),\n                getString('sendscheduleconfirm', 'core_reportbuilder', scheduleSend.dataset.scheduleName),\n                getString('confirm', 'core'),\n                {triggerElement}\n            ).then(() => {\n                const pendingPromise = new Pending('core_reportbuilder/schedules:send');\n\n                return sendSchedule(reportId, scheduleSend.dataset.scheduleId)\n                    .then(addToast(getString('schedulesent', 'core_reportbuilder')))\n                    .then(() => pendingPromise.resolve())\n                    .catch(Notification.exception);\n            }).catch(() => {\n                return;\n            });\n        }\n\n        // Delete schedule.\n        const scheduleDelete = event.target.closest(reportSelectors.actions.scheduleDelete);\n        if (scheduleDelete) {\n            event.preventDefault();\n\n            // Use triggerElement to return focus to the action menu toggle.\n            const triggerElement = scheduleDelete.closest('.dropdown').querySelector('.dropdown-toggle');\n            Notification.saveCancelPromise(\n                getString('deleteschedule', 'core_reportbuilder'),\n                getString('deletescheduleconfirm', 'core_reportbuilder', scheduleDelete.dataset.scheduleName),\n                getString('delete', 'core'),\n                {triggerElement}\n            ).then(() => {\n                const pendingPromise = new Pending('core_reportbuilder/schedules:delete');\n\n                return deleteSchedule(reportId, scheduleDelete.dataset.scheduleId)\n                    .then(addToast(getString('scheduledeleted', 'core_reportbuilder')))\n                    .then(() => {\n                        const reportElement = scheduleDelete.closest(reportSelectors.regions.report);\n                        dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                        return pendingPromise.resolve();\n                    })\n                    .catch(Notification.exception);\n            }).catch(() => {\n                return;\n            });\n        }\n    });\n\n    initialized = true;\n};\n"],"names":["initialized","reportId","document","addEventListener","event","scheduleCreate","target","closest","reportSelectors","actions","preventDefault","scheduleClass","dataset","scheduleModal","events","FORM_SUBMITTED","then","addToast","reportElement","querySelector","regions","report","reportEvents","tableReload","catch","Notification","exception","show","scheduleToggle","pendingPromise","Pending","scheduleStateToggle","Number","state","id","classList","toggle","stringKey","toggleLabel","parentElement","innerHTML","resolve","scheduleEdit","triggerElement","scheduleId","scheduleSend","saveCancelPromise","scheduleName","scheduleDelete","preservePagination"],"mappings":"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"}