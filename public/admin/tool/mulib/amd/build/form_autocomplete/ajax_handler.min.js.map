{"version":3,"file":"ajax_handler.min.js","sources":["../../src/form_autocomplete/ajax_handler.js"],"sourcesContent":["// This file is part of MuTMS suite of plugins for Moodleâ„¢ LMS.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Ajax helper for autocomplete form elements.\n *\n * NOTE: this file is based on /user/amd/src/form_user_selector.js\n *\n * @module     tool_mulib/form_autocomplete/ajax_handler\n * @copyright  2025 Petr Skoda\n * @license    https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n **/\n\nimport Ajax from 'core/ajax';\nimport {getString} from 'core/str';\n\n/**\n * Load the list of items matching the query and render the selector labels for them.\n *\n * @param {String} selector The selector of the auto complete element.\n * @param {String} query The query string.\n * @param {Function} callback A callback function receiving an array of results.\n * @param {Function} failure A function to call in case of failure, receiving the error message.\n */\nexport async function transport(selector, query, callback, failure) {\n    const methodname = document.querySelector(selector).dataset.methodname;\n\n    let args = document.querySelector(selector).dataset.args;\n    args = JSON.parse(args);\n    if (args instanceof Array) {\n        args = {};\n    }\n    args.query = query ?? '';\n\n    const request = {\n        methodname: methodname,\n        args: args,\n    };\n\n    try {\n        const response = await Ajax.call([request])[0];\n        if (response.overflow) {\n            const msg = await getString('toomanyitemsfound', 'tool_mulib', response.maxitems);\n            callback(msg);\n        } else {\n            callback(response.list);\n        }\n    } catch (e) {\n        failure(e);\n    }\n}\n\n/**\n * Process the results for auto complete elements.\n *\n * @param {String} selector The selector of the auto complete element.\n * @param {Array} results An array or results returned by {@see transport()}.\n * @return {Array} New array of the selector options.\n */\nexport function processResults(selector, results) {\n    return results;\n}\n"],"names":["selector","results","query","callback","failure","methodname","document","querySelector","dataset","args","JSON","parse","Array","request","response","Ajax","call","overflow","msg","maxitems","list","e"],"mappings":";;;;;;;;;+FAuE+BA,SAAUC,gBAC9BA,2CApCqBD,SAAUE,MAAOC,SAAUC,eACjDC,WAAaC,SAASC,cAAcP,UAAUQ,QAAQH,eAExDI,KAAOH,SAASC,cAAcP,UAAUQ,QAAQC,KACpDA,KAAOC,KAAKC,MAAMF,MACdA,gBAAgBG,QAChBH,KAAO,IAEXA,KAAKP,MAAQA,MAAAA,MAAAA,MAAS,SAEhBW,QAAU,CACZR,WAAYA,WACZI,KAAMA,gBAIAK,eAAiBC,cAAKC,KAAK,CAACH,UAAU,MACxCC,SAASG,SAAU,OACbC,UAAY,kBAAU,oBAAqB,aAAcJ,SAASK,UACxEhB,SAASe,UAETf,SAASW,SAASM,MAExB,MAAOC,GACLjB,QAAQiB"}