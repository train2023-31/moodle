{"version":3,"file":"configuration.min.js","sources":["../src/configuration.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Premium configuration.\n *\n * @module      tiny_premium/configuration\n * @copyright   2023 David Woloszyn <david.woloszyn@moodle.com>\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {\n    addToolbarButton,\n    addMenubarItem,\n    addToolbarSection,\n    addContextmenuItem,\n    removeMenubarItem,\n} from 'editor_tiny/utils';\nimport {\n    getInitialPluginConfiguration,\n    getPluginOptionName\n} from 'editor_tiny/options';\n\nconst configureToolbar = (toolbar) => {\n    // Add premium toolbar sections to house all the plugins with no natural home.\n    toolbar = addToolbarSection(toolbar, 'premium_a', 'advanced', true);\n    toolbar = addToolbarSection(toolbar, 'premium_b', 'formatting', true);\n    return toolbar;\n};\n\nexport const configure = (instanceConfig, options) => {\n    // Get the namespaced options for Tiny Premium before they are officially initialised.\n    // Due to the timing the plugin options are available, we need to get at the options in this slightly unconventional way.\n    const pluginOptions = getInitialPluginConfiguration(options);\n    const enabledPremiumPlugins = pluginOptions[getPluginOptionName('tiny_premium/plugin', 'premiumplugins')].split(',');\n    let serviceUrls = pluginOptions[getPluginOptionName('tiny_premium/plugin', 'serviceurls')];\n\n    let plugins = instanceConfig.plugins;\n    let menu = instanceConfig.menu;\n    let toolbar = configureToolbar(instanceConfig.toolbar);\n    let contextmenu = instanceConfig.contextmenu;\n    let pluginsettings = {};\n    pluginsettings = {...pluginsettings, ...serviceUrls};\n\n    // Advanced Table.\n    if (enabledPremiumPlugins.indexOf('advtable') !== -1) {\n        plugins += ` advtable`;\n        menu = addMenubarItem(menu, 'table', '| advtablerownumbering', 'advtablesort');\n    }\n    // Enhanced Image Editing.\n    if (enabledPremiumPlugins.indexOf('editimage') !== -1) {\n        plugins += ` editimage`;\n        toolbar = addToolbarButton(toolbar, 'content', 'editimage', 'tiny_media_image');\n        // Remove the duplicate image button from the quickbar toolbar by redefining the values without 'imageoptions'.\n        // eslint-disable-next-line camelcase\n        instanceConfig.editimage_toolbar = 'rotateleft rotateright flipv fliph editimage';\n    }\n    // Export.\n    if (enabledPremiumPlugins.indexOf('export') !== -1) {\n        plugins += ` export`;\n        menu = addMenubarItem(menu, 'tools', '| export');\n    }\n    // Page Embed.\n    if (enabledPremiumPlugins.indexOf('pageembed') !== -1) {\n        plugins += ` pageembed`;\n        toolbar = addToolbarButton(toolbar, 'content', 'pageembed', 'tiny_media_video');\n    }\n    // Advanced Typography.\n    if (enabledPremiumPlugins.indexOf('typography') !== -1) {\n        plugins += ` typography`;\n        toolbar = addToolbarButton(toolbar, 'premium_b', 'typography');\n    }\n    // Case Change.\n    if (enabledPremiumPlugins.indexOf('casechange') !== -1) {\n        plugins += ` casechange`;\n        toolbar = addToolbarButton(toolbar, 'premium_a', 'casechange');\n    }\n    // Checklist.\n    if (enabledPremiumPlugins.indexOf('checklist') !== -1) {\n        plugins += ` checklist`;\n        toolbar = addToolbarButton(toolbar, 'lists', 'checklist');\n    }\n    // Spell Checker Pro.\n    if (enabledPremiumPlugins.indexOf('tinymcespellchecker') !== -1) {\n        plugins += ` tinymcespellchecker`;\n        menu = addMenubarItem(menu, 'tools', 'spellcheckdialog', 'spellcheckerlanguage');\n        contextmenu = addContextmenuItem(contextmenu, 'spellchecker');\n        toolbar = addToolbarButton(toolbar, 'premium_a', 'spellcheckdialog');\n    }\n    // Spelling Autocorrect.\n    if (enabledPremiumPlugins.indexOf('autocorrect') !== -1) {\n        plugins += ` autocorrect`;\n        menu = addMenubarItem(menu, 'tools', '| autocorrect capitalization', 'spellcheckdialog');\n    }\n    // Permanent Pen.\n    if (enabledPremiumPlugins.indexOf('permanentpen') !== -1) {\n        plugins += ` permanentpen`;\n        menu = addMenubarItem(menu, 'format', '| permanentpen configurepermanentpen');\n        toolbar = addToolbarButton(toolbar, 'premium_a', 'permanentpen');\n        contextmenu = addContextmenuItem(contextmenu, 'configurepermanentpen');\n    }\n    // Format Painter.\n    if (enabledPremiumPlugins.indexOf('formatpainter') !== -1) {\n        plugins += ` formatpainter`;\n        toolbar = addToolbarButton(toolbar, 'premium_a', 'formatpainter');\n    }\n    // Link Checker.\n    if (enabledPremiumPlugins.indexOf('linkchecker') !== -1) {\n        plugins += ` linkchecker`;\n        contextmenu = addContextmenuItem(contextmenu, 'linkchecker');\n    }\n    // Table of Contents.\n    if (enabledPremiumPlugins.indexOf('tableofcontents') !== -1) {\n        plugins += ` tableofcontents`;\n        toolbar = addToolbarButton(toolbar, 'premium_a', 'tableofcontents');\n    }\n    // MathML\n    if (enabledPremiumPlugins.indexOf('math') !== -1) {\n        plugins += ` math`;\n        toolbar = addToolbarButton(toolbar, 'premium_a', 'math');\n        menu = addMenubarItem(menu, 'insert', 'math', 'tableofcontents');\n    }\n    // Footnotes.\n    if (enabledPremiumPlugins.indexOf('footnotes') !== -1) {\n        plugins += ` footnotes`;\n        toolbar = addToolbarButton(toolbar, 'premium_a', 'footnotes');\n        menu = addMenubarItem(menu, 'insert', 'footnotes', 'tableofcontents');\n    }\n    // Powerpaste.\n    if (enabledPremiumPlugins.indexOf('powerpaste') !== -1) {\n        plugins += ` powerpaste`;\n    }\n    // Accessibility Checker.\n    if (enabledPremiumPlugins.indexOf('a11ychecker') !== -1) {\n        plugins += ` a11ychecker`;\n        toolbar = addToolbarButton(toolbar, 'premium_a', 'a11ycheck');\n        // Tiny's allychecker plugin is listed in the menu by default. Let's remove it and add it where we want it.\n        menu = removeMenubarItem(menu, 'tools', 'a11ycheck');\n        // Positioning the a11ychecker in the same position as tiny_accessibilitychecker (for familiarity).\n        menu = addMenubarItem(menu, 'tools', 'a11ycheck', 'count');\n        // Finally, hide tiny_accessibilitychecker so there is no confusion.\n        menu = removeMenubarItem(menu, 'tools', 'tiny_accessibilitychecker');\n    }\n\n    return {\n        plugins,\n        toolbar,\n        menu,\n        contextmenu,\n        ...pluginsettings\n    };\n};\n"],"names":["instanceConfig","options","pluginOptions","enabledPremiumPlugins","split","serviceUrls","plugins","menu","toolbar","configureToolbar","contextmenu","pluginsettings","indexOf","editimage_toolbar"],"mappings":"mOA0CyB,CAACA,eAAgBC,iBAGhCC,eAAgB,0CAA8BD,SAC9CE,sBAAwBD,eAAc,gCAAoB,sBAAuB,mBAAmBE,MAAM,SAC5GC,YAAcH,eAAc,gCAAoB,sBAAuB,gBAEvEI,QAAUN,eAAeM,QACzBC,KAAOP,eAAeO,KACtBC,QAhBkBA,CAAAA,UAEtBA,SAAU,4BAAkBA,QAAS,YAAa,YAAY,IACpD,4BAAkBA,QAAS,YAAa,cAAc,IAalDC,CAAiBT,eAAeQ,SAC1CE,YAAcV,eAAeU,YAC7BC,eAAiB,UACrBA,eAAiB,IAAIA,kBAAmBN,cAGW,IAA/CF,sBAAsBS,QAAQ,cAC9BN,qBACAC,MAAO,yBAAeA,KAAM,QAAS,yBAA0B,kBAGf,IAAhDJ,sBAAsBS,QAAQ,eAC9BN,sBACAE,SAAU,2BAAiBA,QAAS,UAAW,YAAa,oBAG5DR,eAAea,kBAAoB,iDAGU,IAA7CV,sBAAsBS,QAAQ,YAC9BN,mBACAC,MAAO,yBAAeA,KAAM,QAAS,cAGW,IAAhDJ,sBAAsBS,QAAQ,eAC9BN,sBACAE,SAAU,2BAAiBA,QAAS,UAAW,YAAa,sBAGX,IAAjDL,sBAAsBS,QAAQ,gBAC9BN,uBACAE,SAAU,2BAAiBA,QAAS,YAAa,gBAGA,IAAjDL,sBAAsBS,QAAQ,gBAC9BN,uBACAE,SAAU,2BAAiBA,QAAS,YAAa,gBAGD,IAAhDL,sBAAsBS,QAAQ,eAC9BN,sBACAE,SAAU,2BAAiBA,QAAS,QAAS,eAGa,IAA1DL,sBAAsBS,QAAQ,yBAC9BN,gCACAC,MAAO,yBAAeA,KAAM,QAAS,mBAAoB,wBACzDG,aAAc,6BAAmBA,YAAa,gBAC9CF,SAAU,2BAAiBA,QAAS,YAAa,sBAGC,IAAlDL,sBAAsBS,QAAQ,iBAC9BN,wBACAC,MAAO,yBAAeA,KAAM,QAAS,+BAAgC,sBAGlB,IAAnDJ,sBAAsBS,QAAQ,kBAC9BN,yBACAC,MAAO,yBAAeA,KAAM,SAAU,wCACtCC,SAAU,2BAAiBA,QAAS,YAAa,gBACjDE,aAAc,6BAAmBA,YAAa,2BAGM,IAApDP,sBAAsBS,QAAQ,mBAC9BN,0BACAE,SAAU,2BAAiBA,QAAS,YAAa,mBAGC,IAAlDL,sBAAsBS,QAAQ,iBAC9BN,wBACAI,aAAc,6BAAmBA,YAAa,iBAGQ,IAAtDP,sBAAsBS,QAAQ,qBAC9BN,4BACAE,SAAU,2BAAiBA,QAAS,YAAa,qBAGN,IAA3CL,sBAAsBS,QAAQ,UAC9BN,iBACAE,SAAU,2BAAiBA,QAAS,YAAa,QACjDD,MAAO,yBAAeA,KAAM,SAAU,OAAQ,qBAGE,IAAhDJ,sBAAsBS,QAAQ,eAC9BN,sBACAE,SAAU,2BAAiBA,QAAS,YAAa,aACjDD,MAAO,yBAAeA,KAAM,SAAU,YAAa,qBAGF,IAAjDJ,sBAAsBS,QAAQ,gBAC9BN,yBAGkD,IAAlDH,sBAAsBS,QAAQ,iBAC9BN,wBACAE,SAAU,2BAAiBA,QAAS,YAAa,aAEjDD,MAAO,4BAAkBA,KAAM,QAAS,aAExCA,MAAO,yBAAeA,KAAM,QAAS,YAAa,SAElDA,MAAO,4BAAkBA,KAAM,QAAS,8BAGrC,CACHD,QAAAA,QACAE,QAAAA,QACAD,KAAAA,KACAG,YAAAA,eACGC"}