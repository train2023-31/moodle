define("aiprovider_ollama/modelchooser",["exports","core_ai/helper"],(function(_exports,_helper){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;
/**
   * AI provider model selection handler.
   *
   * @module     aiprovider_ollama/modelchooser
   * @copyright  2025 Huong Nguyen <huongnv13@gmail.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const Selectors_fields={selector:'[data-modelchooser-field="selector"]',updateButton:'[data-modelchooser-field="updateButton"]',modelSettingsContainer:"id_modelsettingsheadercontainer"};_exports.init=()=>{const modelSelector=document.querySelector(Selectors_fields.selector);if(modelSelector){const modelSettings=JSON.parse(modelSelector.getAttribute("data-storedmodelsettings"))[modelSelector.value],containerId=Selectors_fields.modelSettingsContainer;modelSettings?(0,_helper.populateFields)(modelSettings,containerId):(0,_helper.clearFields)(containerId),modelSelector.addEventListener("change",(e=>{modelSelector.options[e.target.selectedIndex].selected=!0;e.target.closest("form").querySelector(Selectors_fields.updateButton).click()}))}}}));

//# sourceMappingURL=modelchooser.min.js.map