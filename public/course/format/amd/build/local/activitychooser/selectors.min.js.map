{"version":3,"file":"selectors.min.js","sources":["../../../src/local/activitychooser/selectors.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Define all of the selectors we will be using on the grading interface.\n *\n * @module     core_courseformat/local/activitychooser/selectors\n * @copyright  2019 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * A small helper function to build queryable data selectors.\n * @method getDataSelector\n * @param {String} name\n * @param {String} value\n * @return {string}\n */\nconst getDataSelector = (name, value) => {\n    return `[data-${name}=\"${value}\"]`;\n};\n\nexport default {\n    regions: {\n        activeFooter: getDataSelector('region', 'active-footer-container'),\n        categoryContent: getDataSelector('region', 'category-content'),\n        getSectionChooserOptions: containerid => `${containerid} ${getDataSelector('region', 'chooser-options-container')}`,\n        chooserOptions: getDataSelector('region', 'chooser-options-container'),\n        chooserOption: {\n            container: getDataSelector('region', 'chooser-option-container'),\n            actions: getDataSelector('region', 'chooser-option-actions-container'),\n            info: getDataSelector('region', 'chooser-option-info-container'),\n        },\n        chooserSummary: {\n            container: getDataSelector('region', 'chooser-option-summary-container'),\n            content: getDataSelector('region', 'chooser-option-summary-content-container'),\n            header: getDataSelector('region', 'summary-header'),\n            actions: getDataSelector('region', 'chooser-option-summary-actions-container'),\n        },\n        carousel: getDataSelector('region', 'carousel'),\n        help: getDataSelector('region', 'help'),\n        tabContent: getDataSelector('region', 'tabcontent'),\n        favouriteTabNav: getDataSelector('region', 'favourites-tab-nav'),\n        allTabNav: getDataSelector('region', 'all-tab-nav'),\n        categoryTabNav: category => getDataSelector('region', `${category}-tab-nav`),\n        favouriteTab: getDataSelector('region', 'favourites'),\n        getModuleSelector: modname => `[role=\"menuitem\"][data-modname=\"${modname}\"]`,\n        searchResults: getDataSelector('region', 'search-results-container'),\n    },\n    actions: {\n        optionActions: {\n            showSummary: getDataSelector('action', 'show-option-summary'),\n            manageFavourite: getDataSelector('action', 'manage-module-favourite'),\n        },\n        addChooser: getDataSelector('action', 'add-chooser-option'),\n        addSelectedChooserOption: getDataSelector('action', 'add-selected-chooser-option'),\n        clearSearch: getDataSelector('action', 'clearsearch'),\n        closeOption: getDataSelector('action', 'close-chooser-option-summary'),\n        displayCategory: getDataSelector('action', 'chooser-display-category'),\n        hide: getDataSelector('action', 'hide'),\n        search: getDataSelector('action', 'search'),\n    },\n    elements: {\n        section: '.section',\n        sectionmodchooser: 'button.section-modchooser-link',\n        tab: 'a[data-bs-toggle=\"tab\"]',\n        activetab: 'a[data-bs-toggle=\"tab\"][aria-selected=\"true\"]',\n        moduleItem: item => `[data-internal=\"${item}\"]`,\n        favouriteIconActive: '[data-icon=\"favourite-active\"]',\n        favouriteIconInactive: '[data-icon=\"favourite-inactive\"]',\n    },\n};\n"],"names":["getDataSelector","name","value","regions","activeFooter","categoryContent","getSectionChooserOptions","containerid","chooserOptions","chooserOption","container","actions","info","chooserSummary","content","header","carousel","help","tabContent","favouriteTabNav","allTabNav","categoryTabNav","category","favouriteTab","getModuleSelector","modname","searchResults","optionActions","showSummary","manageFavourite","addChooser","addSelectedChooserOption","clearSearch","closeOption","displayCategory","hide","search","elements","section","sectionmodchooser","tab","activetab","moduleItem","item","favouriteIconActive","favouriteIconInactive"],"mappings":";;;;;;;;MA8BMA,gBAAkB,CAACC,KAAMC,wBACXD,kBAASC,yBAGd,CACXC,QAAS,CACLC,aAAcJ,gBAAgB,SAAU,2BACxCK,gBAAiBL,gBAAgB,SAAU,oBAC3CM,yBAA0BC,uBAAkBA,wBAAeP,gBAAgB,SAAU,8BACrFQ,eAAgBR,gBAAgB,SAAU,6BAC1CS,cAAe,CACXC,UAAWV,gBAAgB,SAAU,4BACrCW,QAASX,gBAAgB,SAAU,oCACnCY,KAAMZ,gBAAgB,SAAU,kCAEpCa,eAAgB,CACZH,UAAWV,gBAAgB,SAAU,oCACrCc,QAASd,gBAAgB,SAAU,4CACnCe,OAAQf,gBAAgB,SAAU,kBAClCW,QAASX,gBAAgB,SAAU,6CAEvCgB,SAAUhB,gBAAgB,SAAU,YACpCiB,KAAMjB,gBAAgB,SAAU,QAChCkB,WAAYlB,gBAAgB,SAAU,cACtCmB,gBAAiBnB,gBAAgB,SAAU,sBAC3CoB,UAAWpB,gBAAgB,SAAU,eACrCqB,eAAgBC,UAAYtB,gBAAgB,mBAAasB,sBACzDC,aAAcvB,gBAAgB,SAAU,cACxCwB,kBAAmBC,mDAA8CA,cACjEC,cAAe1B,gBAAgB,SAAU,6BAE7CW,QAAS,CACLgB,cAAe,CACXC,YAAa5B,gBAAgB,SAAU,uBACvC6B,gBAAiB7B,gBAAgB,SAAU,4BAE/C8B,WAAY9B,gBAAgB,SAAU,sBACtC+B,yBAA0B/B,gBAAgB,SAAU,+BACpDgC,YAAahC,gBAAgB,SAAU,eACvCiC,YAAajC,gBAAgB,SAAU,gCACvCkC,gBAAiBlC,gBAAgB,SAAU,4BAC3CmC,KAAMnC,gBAAgB,SAAU,QAChCoC,OAAQpC,gBAAgB,SAAU,WAEtCqC,SAAU,CACNC,QAAS,WACTC,kBAAmB,iCACnBC,IAAK,0BACLC,UAAW,gDACXC,WAAYC,gCAA2BA,WACvCC,oBAAqB,iCACrBC,sBAAuB"}