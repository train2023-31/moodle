{"version":3,"file":"grading_actions.min.js","sources":["../src/grading_actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript controller for the \"Actions\" panel at the bottom of the page.\n *\n * @module     mod_assign/grading_actions\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.1\n */\ndefine(['jquery', 'mod_assign/grading_events'], function($, GradingEvents) {\n\n    /**\n     * GradingActions class.\n     *\n     * @class mod_assign/grading_actions\n     * @param {String} selector The selector for the page region containing the actions panel.\n     */\n    var GradingActions = function(selector) {\n        this._regionSelector = selector;\n        this._region = $(selector);\n\n        this.registerEventListeners();\n    };\n\n    /** @property {String} Selector for the page region containing the user navigation. */\n    GradingActions.prototype._regionSelector = null;\n\n    /** @property {Integer} Remember the last user id to prevent unnessecary reloads. */\n    GradingActions.prototype._lastUserId = 0;\n\n    /** @property {JQuery} JQuery node for the page region containing the user navigation. */\n    GradingActions.prototype._region = null;\n\n    /** @property {Integer} Lower percent limit (mouseX / pagewidth), collapses review panel if exceeded during resizing. */\n    GradingActions.prototype.LOWER_RESIZING_LIMIT = 5;\n\n    /** @property {Integer} Upper percent limit (mouseX / pagewidth), collapses grade panel if exceeded  during resizing. */\n    GradingActions.prototype.UPPER_RESIZING_LIMIT = 95;\n\n    /**\n     * Show the actions if there is valid user.\n     *\n     * @method _showActionsForm\n     * @private\n     * @param {Event} event\n     * @param {Integer} userid\n     */\n    GradingActions.prototype._showActionsForm = function(event, userid) {\n        var form = this._region.find('[data-region=grading-actions-form]');\n\n        if (userid != this._lastUserId && userid > 0) {\n            this._lastUserId = userid;\n        }\n        if (userid > 0) {\n            form.removeClass('hide');\n        } else {\n            form.addClass('hide');\n        }\n\n    };\n\n    /**\n     * Trigger the named action.\n     *\n     * @method _trigger\n     * @private\n     * @param {String} action\n     */\n    GradingActions.prototype._trigger = function(action) {\n        $(document).trigger(action);\n    };\n\n    /**\n     * Get the review panel element.\n     *\n     * @method getReviewPanelElement\n     * @return {jQuery}\n     */\n    GradingActions.prototype.getReviewPanelElement = function() {\n        return $('[data-region=\"review-panel\"]');\n    };\n\n    /**\n     * Check if the page has a review panel.\n     *\n     * @method hasReviewPanelElement\n     * @return {bool}\n     */\n    GradingActions.prototype.hasReviewPanelElement = function() {\n        return this.getReviewPanelElement().length > 0;\n    };\n\n    /**\n     * Get the collapse grade panel button.\n     *\n     * @method getCollapseGradePanelButton\n     * @return {jQuery}\n     */\n    GradingActions.prototype.getCollapseGradePanelButton = function() {\n        return $('[data-region=\"grade-actions\"] .collapse-grade-panel');\n    };\n\n    /**\n     * Get the collapse review panel button.\n     *\n     * @method getCollapseReviewPanelButton\n     * @return {jQuery}\n     */\n    GradingActions.prototype.getCollapseReviewPanelButton = function() {\n        return $('[data-region=\"grade-actions\"] .collapse-review-panel');\n    };\n\n    /**\n     * Get the expand all panels button.\n     *\n     * @method getExpandAllPanelsButton\n     * @return {jQuery}\n     */\n    GradingActions.prototype.getExpandAllPanelsButton = function() {\n        return $('[data-region=\"grade-actions\"] .collapse-none');\n    };\n\n    /**\n     * Get the review slider element.\n     *\n     * @method getResizePanelsElement\n     * @return {HTMLElement} The resizer element or null if not found.\n     */\n    GradingActions.prototype.getResizePanelsElement = function() {\n        return document.querySelector('[data-region=\"resizer\"]');\n    };\n\n    /**\n     * Remove the active state from all layout buttons.\n     *\n     * @method resetLayoutButtons\n     */\n    GradingActions.prototype.resetLayoutButtons = function() {\n        this.getCollapseGradePanelButton().removeClass('active');\n        this.getCollapseReviewPanelButton().removeClass('active');\n        this.getExpandAllPanelsButton().removeClass('active');\n    };\n\n    /**\n     * Hide the review panel.\n     *\n     * @method collapseReviewPanel\n     */\n    GradingActions.prototype.collapseReviewPanel = function() {\n        $(document).trigger(GradingEvents.COLLAPSE_REVIEW_PANEL);\n        $(document).trigger(GradingEvents.EXPAND_GRADE_PANEL);\n        this.resetLayoutButtons();\n        this.getCollapseReviewPanelButton().addClass('active');\n        this.setPanelSplit(0);\n    };\n\n    /**\n     * Show/Hide the grade panel.\n     *\n     * @method collapseGradePanel\n     */\n    GradingActions.prototype.collapseGradePanel = function() {\n        $(document).trigger(GradingEvents.COLLAPSE_GRADE_PANEL);\n        $(document).trigger(GradingEvents.EXPAND_REVIEW_PANEL);\n        this.resetLayoutButtons();\n        this.getCollapseGradePanelButton().addClass('active');\n        this.setPanelSplit(100);\n    };\n\n    /**\n     * Return the layout to default.\n     *\n     * @method expandAllPanels\n     */\n    GradingActions.prototype.expandAllPanels = function() {\n        $(document).trigger(GradingEvents.EXPAND_GRADE_PANEL);\n        $(document).trigger(GradingEvents.EXPAND_REVIEW_PANEL);\n        this.resetLayoutButtons();\n        this.getExpandAllPanelsButton().addClass('active');\n        this.getResizePanelsElement().classList.remove('hide');\n        this.setPanelSplit(70);\n    };\n\n\n    /**\n     * This function enabled the tracking of mouse movement for resizing.\n     *\n     * @method onResizeStart\n     */\n    GradingActions.prototype.onResizeStart = function() {\n        // Bind and store the handlers so we can remove them later.\n        this.handleMouseMove = this.onResizing.bind(this);\n        this.handleMouseUp = this.onResizeEnd.bind(this);\n\n        // Add a class to disable pointer events on iframes during resizing.\n        // This is to prevent the mouse events from being captured by iframes,\n        // preventing the mouse up event from triggering.\n        document.querySelectorAll('iframe').forEach(function(iframe) {\n            iframe.classList.add('disable-pointer');\n        });\n\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n    };\n\n    /**\n     * When user releases the mouse button, finishing resizing, we stop tracking the mouse movement.\n     *\n     * @method onResizeEnd\n     */\n    GradingActions.prototype.onResizeEnd = function() {\n        document.querySelectorAll('iframe').forEach(function(iframe) {\n            iframe.classList.remove('disable-pointer');\n        });\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    /**\n     * Set the CSS variable for panel split.\n     *\n     * @method setPanelSplit\n     * @param {Number} percentage The percentage to set.\n     */\n    GradingActions.prototype.setPanelSplit = function(percentage) {\n        if (percentage <= 0 || percentage >= 100) {\n            this.getResizePanelsElement().classList.add('hide');\n        }\n\n        document.documentElement.style.setProperty('--mod-assign-panel-split', percentage + '%');\n    };\n\n    /**\n     * Get the CSS variable for panel split.\n     *\n     * @method getPanelSplit\n     * @return {Number} The current panel split percentage.\n     */\n    GradingActions.prototype.getPanelSplit = function() {\n        const split = getComputedStyle(document.documentElement).getPropertyValue('--mod-assign-panel-split');\n        return parseFloat(split);\n    };\n\n    /**\n     * Handle the resize action.\n     *\n     * @method onResizing\n     * @param {Event} e The mousemove event.\n     */\n    GradingActions.prototype.onResizing = function(e) {\n        const x = e.clientX;\n        const pagewidth = document.documentElement.clientWidth;\n        let percentage = (x / pagewidth) * 100;\n\n        // Flip percentage in RTL.\n        const isRTL = document.documentElement.dir === 'rtl';\n        if (isRTL) {\n            percentage = 100 - percentage;\n        }\n\n        // When the user resizes panels to a certain exist, we collapse them.\n        if (percentage < this.LOWER_RESIZING_LIMIT || percentage > this.UPPER_RESIZING_LIMIT) {\n            if (percentage > this.UPPER_RESIZING_LIMIT) {\n                this.collapseGradePanel();\n            } else if (percentage < this.LOWER_RESIZING_LIMIT) {\n                this.collapseReviewPanel();\n            }\n            this.onResizeEnd();\n            return;\n        }\n\n        this.setPanelSplit(percentage);\n    };\n\n    /**\n     * Register event listeners for the grade panel.\n     *\n     * @method registerEventListeners\n     */\n    GradingActions.prototype.registerEventListeners = function() {\n        // Don't need layout controls if there is no review panel.\n        if (this.hasReviewPanelElement()) {\n            var collapseReviewPanelButton = this.getCollapseReviewPanelButton();\n            collapseReviewPanelButton.click(function(e) {\n                this.collapseReviewPanel();\n                e.preventDefault();\n            }.bind(this));\n\n            collapseReviewPanelButton.keydown(function(e) {\n                if (!e.metaKey && !e.shiftKey && !e.altKey && !e.ctrlKey) {\n                    if (e.keyCode === 13 || e.keyCode === 32) {\n                        this.collapseReviewPanel();\n                        e.preventDefault();\n                    }\n                }\n            }.bind(this));\n\n            var collapseGradePanelButton = this.getCollapseGradePanelButton();\n            collapseGradePanelButton.click(function(e) {\n                this.collapseGradePanel();\n                e.preventDefault();\n            }.bind(this));\n\n            collapseGradePanelButton.keydown(function(e) {\n                if (!e.metaKey && !e.shiftKey && !e.altKey && !e.ctrlKey) {\n                    if (e.keyCode === 13 || e.keyCode === 32) {\n                        this.collapseGradePanel();\n                        e.preventDefault();\n                    }\n                }\n            }.bind(this));\n\n            var expandAllPanelsButton = this.getExpandAllPanelsButton();\n            expandAllPanelsButton.click(function(e) {\n                this.expandAllPanels();\n                e.preventDefault();\n            }.bind(this));\n\n            expandAllPanelsButton.keydown(function(e) {\n                if (!e.metaKey && !e.shiftKey && !e.altKey && !e.ctrlKey) {\n                    if (e.keyCode === 13 || e.keyCode === 32) {\n                        this.expandAllPanels();\n                        e.preventDefault();\n                    }\n                }\n            }.bind(this));\n\n            var resizePanelsSlider = this.getResizePanelsElement();\n            resizePanelsSlider.addEventListener('mousedown', function(e) {\n                this.onResizeStart();\n                e.preventDefault();\n            }.bind(this));\n\n            resizePanelsSlider.addEventListener('keydown', function(e) {\n                if (![37, 39, 38, 40].includes(e.keyCode)) {\n                    // Ignore keys other than arrow keys.\n                    return;\n                }\n\n\n                const isRTL = document.documentElement.dir === 'rtl';\n                const currentSplit = this.getPanelSplit();\n\n                // Flip percentage in RTL.\n                var increment = isRTL ? -5 : 5;\n                var newValue = currentSplit;\n\n                // Left or down arrow key.\n                if (e.keyCode === 37 || e.keyCode === 40) {\n                    newValue = currentSplit - increment;\n                }\n\n                // Right or up arrow key.\n                if (e.keyCode === 39 || e.keyCode === 38) {\n                    newValue = currentSplit + increment;\n                }\n\n                // Add extra space to prevent the panel immediately collapsing\n                // when the user tries to resize it using the mouse.\n                const extraSpace = 3;\n\n                newValue = Math.max(newValue, this.LOWER_RESIZING_LIMIT + extraSpace);\n                newValue = Math.min(newValue, this.UPPER_RESIZING_LIMIT - extraSpace);\n\n                this.setPanelSplit(newValue);\n            }.bind(this));\n        }\n\n        $(document).on('user-changed', this._showActionsForm.bind(this));\n\n        this._region.find('[name=\"savechanges\"]').on('click', this._trigger.bind(this, 'save-changes'));\n        this._region.find('[name=\"saveandshownext\"]').on('click', this._trigger.bind(this, 'save-and-show-next'));\n        this._region.find('[name=\"resetbutton\"]').on('click', this._trigger.bind(this, 'reset'));\n        this._region.find('form').on('submit', function(e) {\n            e.preventDefault();\n        });\n    };\n\n    return GradingActions;\n});\n"],"names":["define","$","GradingEvents","GradingActions","selector","_regionSelector","_region","registerEventListeners","prototype","_lastUserId","LOWER_RESIZING_LIMIT","UPPER_RESIZING_LIMIT","_showActionsForm","event","userid","form","this","find","removeClass","addClass","_trigger","action","document","trigger","getReviewPanelElement","hasReviewPanelElement","length","getCollapseGradePanelButton","getCollapseReviewPanelButton","getExpandAllPanelsButton","getResizePanelsElement","querySelector","resetLayoutButtons","collapseReviewPanel","COLLAPSE_REVIEW_PANEL","EXPAND_GRADE_PANEL","setPanelSplit","collapseGradePanel","COLLAPSE_GRADE_PANEL","EXPAND_REVIEW_PANEL","expandAllPanels","classList","remove","onResizeStart","handleMouseMove","onResizing","bind","handleMouseUp","onResizeEnd","querySelectorAll","forEach","iframe","add","addEventListener","removeEventListener","percentage","documentElement","style","setProperty","getPanelSplit","split","getComputedStyle","getPropertyValue","parseFloat","e","clientX","clientWidth","dir","collapseReviewPanelButton","click","preventDefault","keydown","metaKey","shiftKey","altKey","ctrlKey","keyCode","collapseGradePanelButton","expandAllPanelsButton","resizePanelsSlider","includes","isRTL","currentSplit","increment","newValue","Math","max","min","on"],"mappings":"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"}