{{#filter}}
<form class="filter-form" method="get" action="{{form_action}}" id="filter-form" dir="rtl">
    <input type="hidden" name="tab" value="list">

    <!-- Course -->
    <div class="form-group">
        <label for="course_id_filter">{{#str}}course, local_financeservices{{/str}}</label>
        <select name="course_id" id="course_id_filter">
            <option value="">{{#str}}allcourses, local_financeservices{{/str}}</option>
            {{#courses}}
                <option value="{{id}}" {{#selected}}selected{{/selected}}>{{fullname}}</option>
            {{/courses}}
        </select>
    </div>

    <!-- Funding type -->
    <div class="form-group">
        <label for="funding_type_filter">{{#str}}fundingtype, local_financeservices{{/str}}</label>
        <select name="funding_type_id" id="funding_type_filter">
            <option value="">{{#str}}allfundingtypes, local_financeservices{{/str}}</option>
            {{#fundingtypes}}
                <option value="{{id}}" {{#selected}}selected{{/selected}}>{{name}}</option>
            {{/fundingtypes}}
        </select>
    </div>

    <!-- Status -->
    <div class="form-group">
        <label for="status_filter">{{#str}}statusfilter, local_financeservices{{/str}}</label>
        <select name="statusid" id="status_filter">
            <option value="">{{#str}}allstatuses, local_financeservices{{/str}}</option>
            {{#statuses}}
                <option value="{{id}}" {{#selected}}selected{{/selected}}>{{name}}</option>
            {{/statuses}}
        </select>
    </div>

    <!-- Clause -->
    <div class="form-group">
        <label for="clause_filter">{{#str}}clause, local_financeservices{{/str}}</label>
        <select name="clause_id" id="clause_filter">
            <option value="">{{#str}}allclauses, local_financeservices{{/str}}</option>
            {{#clauses}}
                <option value="{{id}}" {{#selected}}selected{{/selected}}>{{name}}</option>
            {{/clauses}}
        </select>
    </div>

    <button type="submit" class="btn btn-primary"><i class="fa fa-search"></i>&nbsp;&nbsp; {{#str}}filter, local_financeservices{{/str}}</button>
    <button type="button" class="btn btn-secondary clear-btn" onclick="clearFilters()">{{#str}}clearfilters, local_financeservices{{/str}}</button>
</form>

<script>
function clearFilters() {
    document.getElementById('filter-form').reset();
    window.location.href = '{{form_action}}';
}
</script>
{{/filter}}


<table class="custom-table">
  <button class="export-csv btn btn-outline-info">
    {{#str}}csv, local_financeservices{{/str}} <i class="fas fa-download"></i>
  </button>

 
  <thead>
    <tr>
      <th>{{#str}}course, local_financeservices{{/str}}</th>
      <th>{{#str}}funding_type, local_financeservices{{/str}}</th>
      <th>{{#str}}clause_name, local_financeservices{{/str}}</th>
      <th>{{#str}}price_requested, local_financeservices{{/str}}</th>
      <th>{{#str}}date_time_requested, local_financeservices{{/str}}</th>
      <th>{{#str}}status, local_financeservices{{/str}}</th>
      <th>{{#str}}actions, local_financeservices{{/str}}</th>
    </tr>
  </thead>

  <tbody>
    {{#financeservices}}
    <tr class="{{#was_rejected_and_moved_back}}was-rejected-backwards{{/was_rejected_and_moved_back}}">
      <td>{{course}}</td>
      <td>{{funding_type}}</td>
      <td>{{clause_name}}</td>
      <td>{{price_requested}}</td>
      <td>{{date_time_requested}}</td>
      <td class="status-cell">
        <!-- Workflow status with color coding -->
        <span class="{{#status_is_approved}}text-success{{/status_is_approved}}{{#status_is_initial}}text-warning{{/status_is_initial}}{{#status_is_rejected}}text-danger{{/status_is_rejected}}">
          {{readable_status}}
        </span>

        <!-- Show REJECTION note when rejected and moved backwards OR in final rejected status -->
        {{#was_rejected_and_moved_back}}
          <div class="text-danger small mt-1">
            <strong>{{#str}}previously_rejected, local_financeservices{{/str}} - {{#str}}rejection_reason, local_financeservices{{/str}}:</strong> 
            <span class="rejection-note-display was-rejected-backwards">{{rejection_note}}</span>
          </div>
        {{/was_rejected_and_moved_back}}

        <!-- Show REJECTION note in final rejected status -->
        {{#status_is_rejected}}
          {{#rejection_note}}
          <div class="text-danger small mt-1">
            <strong>{{#str}}rejection_reason, local_financeservices{{/str}}:</strong> 
            <span class="rejection-note-display">{{rejection_note}}</span>
          </div>
          {{/rejection_note}}
        {{/status_is_rejected}}

        <!-- Show APPROVAL note only in approved state -->
        {{#status_is_approved}}
          {{#approval_note}}
          <div class="text-success small mt-1">
            <strong>{{#str}}approval_note, local_financeservices{{/str}}:</strong> {{approval_note}}
          </div>
          {{/approval_note}}
        {{/status_is_approved}}
      </td>
      <td>
        {{#can_approve}}
          <!-- Show buttons only if user can approve and status is not final -->
          {{^is_final}}
            <!-- Approve Button -->
            <button
              onclick="showModal(
                  '{{#str}}confirm, core{{/str}}',
                  '{{#str}}accept, local_financeservices{{/str}}?',
                  () => approveHandler({{id}})
              )"
              class="btn btn-link"
            >
              {{#str}}accept, local_financeservices{{/str}}
            </button>

            <!-- Reject Button -->
            <button
              onclick="showModal(
                  '{{#str}}confirm, core{{/str}}',
                  '{{#str}}reject, local_financeservices{{/str}}?',
                  (note) => rejectionHandler(note, {{id}}),
                  true /* note-field */
              )"
              class="btn btn-link text-danger"
            >
              {{#str}}reject, local_financeservices{{/str}}
            </button>
          {{/is_final}}

          <!-- Show status messages when final -->
          {{#is_final}}
            {{#status_is_rejected}}
              <span class="text-danger">{{#str}}status_rejected, local_financeservices{{/str}}</span>
            {{/status_is_rejected}}
            {{#status_is_approved}}
              <span class="text-success">{{#str}}status_approved, local_financeservices{{/str}}</span>
            {{/status_is_approved}}
          {{/is_final}}
        {{/can_approve}}

        {{^can_approve}}
          <!-- Show status messages for users who can't approve -->
          {{#status_is_rejected}}
            <span class="text-danger">{{#str}}status_rejected, local_financeservices{{/str}}</span>
          {{/status_is_rejected}}
          {{#status_is_approved}}
            <span class="text-success">{{#str}}status_approved, local_financeservices{{/str}}</span>
          {{/status_is_approved}}
          {{^status_is_rejected}}
            {{^status_is_approved}}
              <span class="text-muted">{{#str}}awaiting_approval, local_financeservices{{/str}}</span>
            {{/status_is_approved}}
          {{/status_is_rejected}}
        {{/can_approve}}
      </td>
    </tr>
    {{/financeservices}}
  </tbody>
</table>

<script>
/**
 * Approve a request by ID
 */
function approveHandler(requestId) {
  const actionUrlBase = '{{{ js.action_url_base }}}';
  const sesskey       = '{{{ js.sesskey }}}';

  fetch(actionUrlBase, {
    method : 'POST',
    headers: { 'Content-Type': 'application/json' },
    body   : JSON.stringify({action:'approve', id:requestId, sesskey}),
    credentials: 'same-origin'
  })
  .then(r => r.json())
  .then(() => location.reload())
  .catch(console.error);
}

/**
 * Reject a request with a note
 */
function rejectionHandler(note, requestId) {
  const actionUrlBase = '{{{ js.action_url_base }}}';
  const sesskey       = '{{{ js.sesskey }}}';

  fetch(actionUrlBase, {
    method : 'POST',
    headers: { 'Content-Type': 'application/json' },
    body   : JSON.stringify({action:'reject', id:requestId, rejection_note:note, sesskey}),
    credentials: 'same-origin'
  })
  .then(r => r.json())
  .then(() => location.reload())
  .catch(console.error);
}
</script>
