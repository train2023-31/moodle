{"version":3,"file":"form_autocomplete_ajax.min.js","sources":["../src/form_autocomplete_ajax.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Provides support for general form autocomplete via ajax.\n *\n * @module      local_openlms/form_autocomplete_ajax\n * @copyright   2023 Open LMS (https://www.openlms.net/)\n * @author      Petr Skoda\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\n\n/**\n * Load the list of items via WS.\n *\n * @param {String} selector The selector of the auto complete element.\n * @param {String} query The query string.\n * @param {Function} callback A callback function receiving an array of results.\n * @param {Function} failure A function to call in case of failure, receiving the error message.\n */\nexport async function transport(selector, query, callback, failure) {\n\n    const wsmethod = document.querySelector(selector).getAttribute('data-ws-method');\n    var wsarguments = document.querySelector(selector).getAttribute('data-ws-args');\n    wsarguments = JSON.parse(wsarguments);\n\n    if (typeof query === \"undefined\") {\n        wsarguments.query = '';\n    } else {\n        wsarguments.query = query;\n    }\n\n    const request = {\n        methodname: wsmethod,\n        args: wsarguments\n    };\n\n    try {\n        const response = await Ajax.call([request])[0];\n\n        if (response.notice !== null) {\n            callback(response.notice);\n        } else {\n            callback(response.list);\n        }\n    } catch (e) {\n        failure(e);\n    }\n}\n\n/**\n * Process the results for auto complete elements.\n *\n * @param {String} selector The selector of the auto complete element.\n * @param {Array} results An array or results returned by {@see transport()}.\n * @return {Array} New array of the selector options.\n */\nexport function processResults(selector, results) {\n    return results;\n}\n"],"names":["selector","results","query","callback","failure","wsmethod","document","querySelector","getAttribute","wsarguments","JSON","parse","request","methodname","args","response","Ajax","call","notice","list","e"],"mappings":";;;;;;;;8FAuE+BA,SAAUC,gBAC9BA,2CAtCqBD,SAAUE,MAAOC,SAAUC,eAEjDC,SAAWC,SAASC,cAAcP,UAAUQ,aAAa,sBAC3DC,YAAcH,SAASC,cAAcP,UAAUQ,aAAa,gBAChEC,YAAcC,KAAKC,MAAMF,aAGrBA,YAAYP,WADK,IAAVA,MACa,GAEAA,YAGlBU,QAAU,CACZC,WAAYR,SACZS,KAAML,uBAIAM,eAAiBC,cAAKC,KAAK,CAACL,UAAU,GAEpB,OAApBG,SAASG,OACTf,SAASY,SAASG,QAElBf,SAASY,SAASI,MAExB,MAAOC,GACLhB,QAAQgB"}